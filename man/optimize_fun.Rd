% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_fun.R
\name{optimize_fun}
\alias{optimize_fun}
\title{Optimize fun}
\usage{
optimize_fun(
  fun,
  lower,
  upper,
  ...,
  X = NULL,
  y = NULL,
  rho = 0.3,
  maximize = FALSE,
  control = list()
)
}
\arguments{
\item{fun}{function to be optimized}

\item{lower}{vector of lower bounds for the variables to be optimized over,}

\item{upper}{vector of upper bounds for the variables to be optimized over,}

\item{...}{additional arguments to be passed to fun}

\item{X, y}{the initial points where fun has been evaluated. If null, a maximinLHS
design is used to generate 5d points as X and y_i = fun(X_i)}

\item{rho}{a double [0,1] to determine the ton n observations to be used for
region of interest determination}

\item{maximize}{logical. Should we maximize or minimize (the default)?}

\item{control}{a list of control parameters. See ‘Details’.}
}
\description{
Uses EGO algorithm to optimize any given function.
}
\details{
\describe{
 \item{\code{nsteps}}{A positive integer representing the
 desired number of additional points per iteration}
 \item{\code{trueglobal}}{double. The true function optimum.}
 \item{\code{expansion_rate}}{double [0,1] for the ROI expansion in case of a failed iteration. 0 implies reverting back to
the initial function domain.}
 \item{\code{tol}}{double. the desired accuracy level.ie convergence tolerance.
 If reached before maxit, the code stops and the result returned}
 \item{\code{budget}}{The total number of function evaluations to be carried out}
 \item{\code{maxit}}{Integer. maximum number of iterations to be carried out. Defaults to 20}
 \item{\code{counter}}{Integer. Number of times to switch to global search once local search is unsuccessful}
 \item{\code{do_maxit}}{logical. Whether to iterate until maxit}
 \item{\code{plot}}{logical. Should the Region be ploted?}
 \item{\code{dimplot}}{an integer vector of length 2. The dimensions of the function to be plotted}
 \item{\code{basicEGO}}{logical. Whether to maintain the domain as given.
 TRUE denotes that the domain will not change throughout the optimization. This is the basic EGO algorithm}
 \item{\code{method}}{choise between \code{fastEGO} and \code{TREGO}}
 \item{\code{n}}{number of observations for the initial design. defaults to 5*length(lower)
 Used if X is not provided. Defaults to \code{5*length(lower)}}
 \item{\code{cost}}{cost function to evaluate the loss}
 \item{\code{trace}}{logical. Tracing the information on the progress of the optimization}
 \item{\code{seed}}{Set a seed for reproducability}
}
}
\examples{
# get function domain
bran_dom <- domain('branin')

# optimize the function
optimize_fun(branin, bran_dom$lower, bran_dom$upper)

# invoke the global optimum
optimize_fun(branin, bran_dom$lower, bran_dom$upper,
    control = list(trueglobal = bran_dom$opt$f))


## Maximize 2-d normal density within [-10,10] and [-10,10]

lower <- c(-10,-10)
upper <- c(10,10)
sig <- diag(2) #can change the covariance/variance matrix
mu <- numeric(2) # can change the center
optimize_fun(mvtnorm::dmvnorm, lower, upper, mean = mu, sigma=sig,
             maximize = TRUE)
}
\author{
BLANK
}
